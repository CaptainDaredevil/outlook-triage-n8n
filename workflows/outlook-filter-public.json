{
  "name": "Outlook filter REDACTED",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "output": "raw",
        "filters": {
          "foldersToInclude": [
            "AQMkADkyNGJmZTQ2LWNmYjAtNGU5YS1iNmQ3LTZiYTRkYmZjNDg1NgAuAAADc-o4pQHhU0uGF2-rY2SAZQEANMwRC6RQVEWTciFNz3OZAwAAAgEMAAAA"
          ],
          "readStatus": "both"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftOutlookTrigger",
      "typeVersion": 1,
      "position": [
        -1728,
        368
      ],
      "id": "REDACTED",
      "name": "Microsoft Outlook Trigger",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "REDACTED",
          "name": "Outlook REDACTED"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function decodeEntities(s='') {\n  return s\n    .replace(/&nbsp;/gi, ' ')\n    .replace(/&amp;/gi, '&')\n    .replace(/&lt;/gi, '<')\n    .replace(/&gt;/gi, '>')\n    .replace(/&quot;/gi, '\"')\n    .replace(/&#39;/gi, \"'\");\n}\n\nreturn items.map(item => {\n  const body = item.json?.body || {};\n  const raw = body.content || '';\n\n  // 1) HTML -> text\n  const plain = decodeEntities(\n    raw\n      .replace(/<style[\\s\\S]*?<\\/style>/gi,' ')\n      .replace(/<script[\\s\\S]*?<\\/script>/gi,' ')\n      .replace(/<!--[\\s\\S]*?-->/g,' ')\n      .replace(/<[^>]+>/g,' ')\n  )\n  .replace(/\\s+/g,' ')\n  .trim();\n\n  // 2) Удаляем типичные «подвалы» (unsubscribe, адреса рассылки)\n  const cleaned = plain\n    .replace(/(odhlásenie|unsubscribe|если не хотите|не хочeте отримувати)[\\s\\S]*$/i, '')\n    .trim();\n\n  // 3) Фолбэк, если письмо пустое\n  const fallback = item.json.bodyPreview || item.json.subject || '';\n  item.json._plainBody = (cleaned || fallback).slice(0, 5000);\n\n  // 4) Метаданные\n  item.json._meta = {\n    id: item.json.id,\n    subject: item.json.subject || '',\n    from: item.json.from?.emailAddress?.address\n          || item.json.sender?.emailAddress?.address\n          || '',\n    to: (item.json.toRecipients || []).map(r => r.emailAddress.address).join(', '),\n    received: item.json.receivedDateTime || '',\n    hasAttachments: !!item.json.hasAttachments,\n    webLink: item.json.webLink || ''\n  };\n\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1520,
        368
      ],
      "id": "REDACTED",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Answer ONLY with one JSON object that matches the provided schema exactly.\nNo text before/after. No markdown. No extra keys.\n\nYou are an email classifier.\n\n## Task\n\nClassify the email into a single topical category, assign priority, suggest a folder, and set notify flag.\n\n## Inputs\n\nSubject: {{ $json[\"_meta\"][\"subject\"] }}\nFrom: {{ $json[\"_meta\"][\"from\"] }}\nBody: {{ $json[\"_plainBody\"] }}\n\n## Categories (choose exactly ONE)\n\nUniversity, System, Promotions, Personal, Other\n\n## Priority rules\n\n* \"critical\": urgent ≤24h, university official with deadline, financial transaction/failure, security alert requiring immediate action (e.g., account locked, fraudulent charge, forced password reset, payment failure, service suspension).\n* \"high\": important but not critical (e.g., deadlines for exams, contracts, invoices, near-term meeting invites/updates).\n* \"normal\":\n\n  * routine security notifications (“new sign-in detected”, “unfamiliar device”, “login attempt”),\n  * one-time verification codes (OTP/2FA/login),\n  * automated alerts that say “If this was you, no action needed.”\n* \"low\": junk, promo, newsletters, marketing.\n  ⚠ Promotional/marketing emails remain \"low\" even if they mention expiry dates or renewal prompts.\n\n## Folder mapping\n\nUse the main label → one of: University, System, Personal, Promotions, Other.\n\n## Notify\n\ntrue if priority=\"critical\" OR (priority=\"high\" AND label in {University, System}). Else false.\n\n## Output JSON\n\n{\n\"label\": string,\n\"priority\": \"critical\"|\"high\"|\"normal\"|\"low\",\n\"suggestedFolder\": string,\n\"summary\": string,\n\"reasons\": string\\[],\n\"confidence\": number,\n\"notify\": boolean\n}",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -1344,
        368
      ],
      "id": "REDACTED",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {
          "maxTokens": 1024,
          "responseFormat": "json_object",
          "maxRetries": 2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1376,
        544
      ],
      "id": "REDACTED",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "REDACTED",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.priority || $json.output.priority }}",
                    "rightValue": "low",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "REDACTED"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "low"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "REDACTED",
                    "leftValue": "={{ $json.priority || $json.output.priority }}",
                    "rightValue": "normal",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "normal"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "REDACTED",
                    "leftValue": "={{ $json.priority || $json.output.priority }}",
                    "rightValue": "high",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "high"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "REDACTED",
                    "leftValue": "={{ $json.priority || $json.output.priority }}",
                    "rightValue": "critical",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "critical"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "REDACTED",
                    "leftValue": "=",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1040,
        96
      ],
      "id": "REDACTED",
      "name": "Switch (low-critical)"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -704,
        -32
      ],
      "id": "REDACTED",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "chatId": "REDACTED",
        "text": "=📧 *New Email Received*\n\n👤 *From:* {{$node[\"Microsoft Outlook Trigger\"].json.from.emailAddress.address}}\n📥 *To:* {{$node[\"Microsoft Outlook Trigger\"].json.toRecipients[0].emailAddress.address}}\n📝 *Subject:* {{$node[\"Microsoft Outlook Trigger\"].json.subject}}\n\n⚡ *Priority:* {{$json.output.priority}}\n📂 *Suggested Folder:* {{$json.output.suggestedFolder}}\n\n📖 *Summary:*  \n{{$json.output.summary}}\n\n💡 *Why important:*  \n• {{$json.output.reasons[0]}}  \n• {{$json.output.reasons[1]}}  \n• {{$json.output.reasons[2]}}\n\n🔗 [Open email]({{$node[\"Microsoft Outlook Trigger\"].json.webLink}})",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -704,
        128
      ],
      "id": "REDACTED",
      "name": "Need to read",
      "webhookId": "REDACTED",
      "credentials": {
        "telegramApi": {
          "id": "REDACTED",
          "name": "REDACTED"
        }
      }
    },
    {
      "parameters": {
        "chatId": "REDACTED",
        "text": "The agent did not recognize the letter. We need to figure it out.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -704,
        320
      ],
      "id": "REDACTED",
      "name": "AI slop",
      "webhookId": "REDACTED",
      "credentials": {
        "telegramApi": {
          "id": "REDACTED",
          "name": "REDACTED"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "REDACTED",
                    "leftValue": "={{ $json.output.suggestedFolder }}",
                    "rightValue": "Personal",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Personal"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "REDACTED",
                    "leftValue": "={{ $json.output.suggestedFolder }}",
                    "rightValue": "Promotions",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Promotions"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "REDACTED",
                    "leftValue": "={{ $json.output.suggestedFolder }}",
                    "rightValue": "System",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "System"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "REDACTED",
                    "leftValue": "={{ $json.output.suggestedFolder }}",
                    "rightValue": "University",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "University"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "REDACTED",
                    "leftValue": "={{ $json.output.suggestedFolder }}",
                    "rightValue": "Other",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Other"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1200,
        736
      ],
      "id": "REDACTED",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "move",
        "messageId": {
          "__rl": true,
          "value": "={{ $('Microsoft Outlook Trigger').item.json.id }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "value": "AQMkADkyNGJmZTQ2LWNmYjAtNGU5YS1iNmQ3LTZiYTRkYmZjNDg1NgAuAAADc-o4pQHhU0uGF2-rY2SAZQEANMwRC6RQVEWTciFNz3OZAwABHm8ZcAAAAA==",
          "mode": "list",
          "cachedResultName": "Personal",
          "cachedResultUrl": "REDACTED_URL"
        }
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        -848,
        480
      ],
      "id": "REDACTED",
      "name": "Move a Personal message",
      "webhookId": "REDACTED",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "REDACTED",
          "name": "Outlook REDACTED"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "messageId": {
          "__rl": true,
          "value": "={{ $('Microsoft Outlook Trigger').item.json.id }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "value": "AQMkADkyNGJmZTQ2LWNmYjAtNGU5YS1iNmQ3LTZiYTRkYmZjNDg1NgAuAAADc-o4pQHhU0uGF2-rY2SAZQEANMwRC6RQVEWTciFNz3OZAwABHm8ZbgAAAA==",
          "mode": "list",
          "cachedResultName": "System",
          "cachedResultUrl": "REDACTED_URL"
        }
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        -608,
        752
      ],
      "id": "REDACTED",
      "name": "Move a System message",
      "webhookId": "REDACTED",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "REDACTED",
          "name": "Outlook REDACTED"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "messageId": {
          "__rl": true,
          "value": "={{ $('Microsoft Outlook Trigger').item.json.id }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "value": "AQMkADkyNGJmZTQ2LWNmYjAtNGU5YS1iNmQ3LTZiYTRkYmZjNDg1NgAuAAADc-o4pQHhU0uGF2-rY2SAZQEANMwRC6RQVEWTciFNz3OZAwABHm8ZbAAAAA==",
          "mode": "list",
          "cachedResultName": "University",
          "cachedResultUrl": "REDACTED_URL"
        }
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        -752,
        864
      ],
      "id": "REDACTED",
      "name": "Move a University message",
      "webhookId": "REDACTED",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "REDACTED",
          "name": "Outlook REDACTED"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "messageId": {
          "__rl": true,
          "value": "={{ $('Microsoft Outlook Trigger').item.json.id }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "value": "AQMkADkyNGJmZTQ2LWNmYjAtNGU5YS1iNmQ3LTZiYTRkYmZjNDg1NgAuAAADc-o4pQHhU0uGF2-rY2SAZQEANMwRC6RQVEWTciFNz3OZAwABHm8ZcQAAAA==",
          "mode": "list",
          "cachedResultName": "Other",
          "cachedResultUrl": "REDACTED_URL"
        }
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        -800,
        1024
      ],
      "id": "REDACTED",
      "name": "Move an Other message",
      "webhookId": "REDACTED",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "REDACTED",
          "name": "Outlook REDACTED"
        }
      }
    },
    {
      "parameters": {
        "operation": "move",
        "messageId": {
          "__rl": true,
          "value": "={{ $('Microsoft Outlook Trigger').item.json.id }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "value": "AQMkADkyNGJmZTQ2LWNmYjAtNGU5YS1iNmQ3LTZiYTRkYmZjNDg1NgAuAAADc-o4pQHhU0uGF2-rY2SAZQEANMwRC6RQVEWTciFNz3OZAwABHm8ZdQAAAA==",
          "mode": "list",
          "cachedResultName": "Fallback",
          "cachedResultUrl": "REDACTED_URL"
        }
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        -1008,
        1104
      ],
      "id": "REDACTED",
      "name": "Move a Fallback",
      "webhookId": "REDACTED",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "REDACTED",
          "name": "Outlook REDACTED"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"output\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"label\": {\n          \"type\": \"string\",\n          \"enum\": [\"University\",\"System\",\"Promotions\",\"Personal\",\"Other\"]\n        },\n        \"priority\": {\n          \"type\": \"string\",\n          \"enum\": [\"critical\",\"high\",\"normal\",\"low\"]\n        },\n        \"suggestedFolder\": {\n          \"type\": \"string\",\n          \"enum\": [\"University\",\"System\",\"Promotions\",\"Personal\",\"Other\"]\n        },\n        \"summary\": { \"type\": \"string\", \"maxLength\": 240 },\n        \"reasons\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\" },\n          \"minItems\": 1,\n          \"maxItems\": 5\n        },\n        \"confidence\": { \"type\": \"number\", \"minimum\": 0, \"maximum\": 1 },\n        \"notify\": { \"type\": \"boolean\" }\n      },\n      \"required\": [\"label\",\"priority\",\"suggestedFolder\",\"summary\",\"reasons\",\"confidence\",\"notify\"],\n      \"additionalProperties\": false\n    }\n  },\n  \"required\": [\"output\"],\n  \"additionalProperties\": false,\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -1136,
        544
      ],
      "id": "REDACTED",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "operation": "move",
        "messageId": {
          "__rl": true,
          "value": "={{ $('Microsoft Outlook Trigger').item.json.id }}",
          "mode": "id"
        },
        "folderId": {
          "__rl": true,
          "value": "AQMkADkyNGJmZTQ2LWNmYjAtNGU5YS1iNmQ3LTZiYTRkYmZjNDg1NgAuAAADc-o4pQHhU0uGF2-rY2SAZQEANMwRC6RQVEWTciFNz3OZAwABHm8ZbwAAAA==",
          "mode": "list",
          "cachedResultName": "Promotions",
          "cachedResultUrl": "REDACTED_URL"
        }
      },
      "type": "n8n-nodes-base.microsoftOutlook",
      "typeVersion": 2,
      "position": [
        -704,
        608
      ],
      "id": "REDACTED",
      "name": "Move a Promotions message",
      "webhookId": "REDACTED",
      "credentials": {
        "microsoftOutlookOAuth2Api": {
          "id": "REDACTED",
          "name": "Outlook REDACTED"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Microsoft Outlook Trigger": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Switch (low-critical)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch (low-critical)": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Need to read",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Need to read",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "AI slop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Move a Personal message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Move a Promotions message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Move a System message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Move a University message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Move an Other message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Move a Fallback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "Qxz1zZsVQKpZBT4J"
  },
  "versionId": "ebdbba67-23f1-4d4b-a190-3e0d79795117",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "948bb98238b6d53395d329d73cb0b5fca92bd4e4ef3ef0b2f9b0a213bf0aa583"
  },
  "id": "REDACTED",
  "tags": []
}
